name: Deploy Laravel Application via SSH

on:
  push:
    branches:
      - gh-actions

env:
  PROJECT_PATH_ON_SERVER: ${{vars.PROJECT_PATH_ON_SERVER}}
  DO_ACCESS_TOKEN: ${{secrets.DIGITALOCEAN_ACCESS_TOKEN}}
  DO_FIREWALL_ID: ${{secrets.DO_FIREWALL_ID}}
  TEMP_BRANCH: "tmp-${GITHUB_RUN_ID}"
  BRANCH_NAME: ${{github.ref_name}}
  SSH_HOST: ${{secrets.SSH_HOST}}
  SSH_USERNAME: ${{secrets.SSH_USERNAME}}
  SSH_KEY: ${{secrets.SSH_KEY}}

jobs:
  test-code:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true ## Para no primeiro erro?!

    steps:
    - uses: actions/checkout@v3
    - uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
      env:
        fail-fast: true

    - name: Get PHP version
      run: php -v

    - name: Run PHP code
      shell: php {0}
      run: |
        <?php
        $welcome = "Hello, world";
        echo $welcome;

    - name: Install dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.gh-actions', '.env');"

    - name: Generate key
      run: php artisan key:generate

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite

    - name: Execute tests (Unit and Feature tests) via Laravel tests
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: php artisan test

    - name: Execute tests with pint
      run: composer pint:test

  deploy:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    needs: test-code
    steps:
      - uses: actions/checkout@v3
      - uses: appleboy/ssh-action@v0.1.10
        with:
          envs: TEMP_BRANCH,BRANCH_NAME,PROJECT_PATH_ON_SERVER
          host: ${{env.SSH_HOST}}
          username: ${{env.SSH_USERNAME}}
          key: ${{env.SSH_KEY}}
          port: 22
          script_stop: true

      - name: Add runner IP on droplet firewall rules
        run: bash ./ci-cd/tools/do-ctl/fw-inbound-rules-handler.sh add

        # - name: Account info # Exemplo de ação que pode ser executada com o DOCTL
        #   env:
        #     DO_ACCESS_TOKEN: ${{secrets.DIGITALOCEAN_ACCESS_TOKEN}}
        #   run: bash ./ci-cd/tools/do-ctl/doctl.sh account get

      - name: Deploy application via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          envs: TEMP_BRANCH,BRANCH_NAME,PROJECT_PATH_ON_SERVER
          script: |
            whoami
            cd "${PROJECT_PATH_ON_SERVER}"
            echo -e "${BRANCH_NAME}"
            echo -e "${PROJECT_PATH_ON_SERVER}"
            git clean -fd
            git checkout .
            git restore --staged .
            git restore .
            git checkout .
            export TEMP_BRANCH_MD5=$(echo "${TEMP_BRANCH}"|md5sum|head -n 1|awk '{print $1}')
            echo ${TEMP_BRANCH_MD5}
            git branch -D ${TEMP_BRANCH_MD5} > /dev/null 2>&1 || echo "fail"
            git checkout -b ${TEMP_BRANCH_MD5}
            git branch -D ${BRANCH_NAME} > /dev/null 2>&1 || echo "fail"
            git fetch origin
            git checkout ${BRANCH_NAME} -f
            git branch -D ${TEMP_BRANCH_MD5} > /dev/null 2>&1 || echo "fail"
            echo ${TEMP_BRANCH_MD5}
            echo -e ""
            bash "${PROJECT_PATH_ON_SERVER}/ci-cd/scripts/sail-noit-run.sh" composer install --ignore-platform-reqs
            echo -e ""
            echo -e ""
            ls -l vendor|wc -l
            echo -e ""

      - name: Remove runner IP on droplet firewall rules
        run: bash ./ci-cd/tools/do-ctl/fw-inbound-rules-handler.sh remove

      - name: Try deploy application via SSH (expect error)
        continue-on-error: true
        uses: appleboy/ssh-action@v0.1.10
        with:
          envs: TEMP_BRANCH,BRANCH_NAME,PROJECT_PATH_ON_SERVER
          script: whoami
